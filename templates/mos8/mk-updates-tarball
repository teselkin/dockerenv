#!/bin/bash

set -o errexit

#exec 4>/tmp/xtrace.log
#export BASH_XTRACEFD=4

exec &> >(tee -a /tmp/debug.log)

usage(){
  cat << EOF

mk-updates-tarball

  Script to download rpm packages, create repository and compress into tar.gz file.
  Packages names can be stored in a file or passed as command line arguments.

  The script generates two log files in /tmp directory - xtrace.log and debug.log.

  Resulting tarball named updates.tar.gz will be copied to /workspace directory.

Usage:

  mk-updates-tarball [-h] [-f <filename>] [package [package]]

  -h|--help      - show this message and exit
  -f|--from-file - download packages listed in a file

EOF
}

find_missed_deps() {
  local repos
  local available_pkgs=$(mktemp)
  local missed_pkgs=$(mktemp)

  repos='--disablerepo=\*'
  for repo in ${LOCAL_REPO} ${MOS_REPOS}; do
    repos="${repos} --enablerepo=${repo}"
  done

  eval "yum -q list available ${repos}" | awk -v ofile=${available_pkgs} '
{
  if ( NR > 1 ) {
    print $1 >> ofile
  }
}'

  while read pkg; do
    yum deplist ${pkg} | awk -v ofile=${missed_pkgs} '
BEGIN {
  p = ""
  n = ""
  split("", a)
}
/^package\:/ { p = $2 " " $3; next }
/^[[:space:]]+dependency\:/ { n = $2; next }
/Unsatisfied dependency/ {
  print "Got unsatisfied dependency " n " for package " p
  a[n] = n
}
END {
  for(k in a) {
   print k ".rpm" >> ofile
  }
}'
  done < ${available_pkgs}

  RETVAL=$(mktemp)
  cat ${missed_pkgs} | sort -u > ${RETVAL}
  if [ $(cat ${RETVAL} | wc -l) -eq 0 ]; then
    rm -f ${RETVAL}
  fi

  rm -f ${available_pkgs}
  rm -f ${missed_pkgs}
}

download_from_file() {
  local pkg
  local name
  local repos

  for name in ${CENTOS_REPOS}; do
    repos="${repos} --enablerepo=${name}"
  done

  while read name; do
    pkg=${name%%.rpm}
    eval "sudo yumdownloader ${repos} --destdir ${tmpdir}/Packages ${pkg}"
  done < <(awk '{for(i=1;i<=NF;i++){if($i~/\.rpm$/){print $i}}}' "${1}")
}

download_from_list() {
  local name
  local repos

  for name in ${CENTOS_REPOS}; do
    repos="${repos} --enablerepo=${name}"
  done

  eval "sudo yumdownloader ${repos} --destdir ${tmpdir}/Packages ${@}"
}

rebuild_local_repo() {
  pushd ${tmpdir}
  if [ -d repodata ]; then
    rm -rf repodata
  fi
  createrepo .
  popd

  cat << EOF | sudo tee /etc/yum.repos.d/local.repo
[local]
name=Local Repo
baseurl=file://${tmpdir}
enabled=1
gpgcheck=0
EOF

  sudo yum makecache
}


from_file=''
from_list=''
update_tarball=''

LOCAL_REPO='local'
MOS_REPOS=${MOS_REPOS:-'mos-os mos-updates mos-proposed'}
VAULT_REPOS=${VAULT_REPOS:-'vault-base'}
CENTOS_REPOS=${CENTOS_REPOS:-'base updates base-debuginfo'}

while [ -n "$1" ]; do
  case "$1" in
    -h|--help)
      usage
      exit 0
    ;;
    -f|--from-file)
      from_file="$2"
      shift 2
    ;;
    -u|--update)
      update_tarball=$(readlink -e "$2")
      shift 2
    ;;
    *)
      from_list="${from_list} $2"
      shift
    ;;
  esac
done

set -o xtrace

tmpdir=$(mktemp -d)

echo "Tempdir ${tmpdir}"

#sudo yum-config-manager --enable base-debuginfo
#sudo yum makecache

if [ -n "${update_tarball}" ]; then
  pushd ${tmpdir}
  tar -xzvf ${update_tarball}
  popd
fi

mkdir -p ${tmpdir}/Packages

if [ -f "${from_file}" ]; then
  download_from_file "${from_file}"
fi

if [ -n "${from_list}" ]; then
  download_from_list "${from_list}"
fi

rebuild_local_repo
find_missed_deps
missed_deps="${RETVAL}"
while [ -f "${missed_deps}" ]; do
  download_from_file ${missed_deps}
  rebuild_local_repo
  find_missed_deps
  missed_deps="${RETVAL}"
done

pushd ${tmpdir}
tar -czvf /workspace/updates.tar.gz .
popd

